def find_in_list(chars, shifted_chars):
# this function is used to find the position of the "query" in the "mainlist". If "query" is in the list then it returns its position, otherwise it returns None
    shifted_char= len(shifted_chars)
    index = None
    for i in range(shifted_char):
        element = shifted_chars[i]
        if element == chars:
            index = i
    return i
# this should return the position of the "query" in the "mainlist"


chars = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
shifted_chars = ['c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','a','b']
print(find_in_list(chars,shifted_chars))  




#encrypt_message function defined here but not called
def encrypt_message(plain_msg):
# this fucnction takes "plain_msg" as an argument and print/return the encrypted message. The "plain_msg" is tranfered into "encrypted_msg" using "shifted_chars" list. Example, if plain_msg = "ng" then n => p, g => i  and hence encrypted_msg = "pi"
    encrypted_msg = ""
    for counter in range(26) :
      # for character in msg
       if plain_msg==chars[counter]:
            new_char = shifted_chars[counter]
            print(new_char)
            break

      


def decrypt_message(encrypted_msg):
# this fucnction takes "encrypted_msg" as an argument and print/return the encrypted message. The "encrypted_msg" is tranfered into "decrypted_msg" using "shifted_chars" list. Example, if encrypted_msg = "pi" then p => n, i => g  and hence decrypted_msg = "ng"
    decrypted_msg = ""
    for character in range (26):
        if encrypted_msg==shifted_chars[character]:
            new_char=chars[character]
            print(new_char)
            break


# methods should return or print the new messages.
############################################### Code starts from here ##################################################
flag = True
while flag == True:
    choice = input("What do you want to do? 1. Encrypt a message 2. Decrypt a message  Enter `e` or `d` respectively!")
    if choice == 'e':
        plain_msg= input("Enter message to encrypt??")
        encrypt_message(plain_msg)
    elif choice =="d":
        encrypted_msg= input("Enter message to decrypt?")
        enccrypted_msg=chars
        decrypt_message(encrypted_msg)
    else:
        print("lose")
    play_again = input("Do you want to try agian or Do you want to exit? (Y/N)")
    if play_again == "n":
        break
